// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: components/sync/protocol/password_with_local_data.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Wrapper for a set of credentials that consists of (possibly) synced password
 * data and local data that is exclusively read and modified by Chrome.
 * ATTENTION(crbug.com/1330911): This proto is being moved to
 * components/password_manager/core/browser/protocol folder. Two files exist
 * while the migration is in process, this file will be deleted when the
 * migration is over. IF YOU MODIFY THIS FILE, PLEASE ALSO MODIFY THE COPY IN
 * components/password_manager.
 * </pre>
 *
 * Protobuf type {@code sync_pb.PasswordWithLocalData}
 */
public  final class PasswordWithLocalData extends
    com.google.protobuf.GeneratedMessageLite<
        PasswordWithLocalData, PasswordWithLocalData.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.PasswordWithLocalData)
    PasswordWithLocalDataOrBuilder {
  private PasswordWithLocalData() {
  }
  public interface LocalDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:sync_pb.PasswordWithLocalData.LocalData)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Metadata that is opaque to the provider. The provider does not read,
     * modify or interpret it, only Chrome does. This data will for example
     * contain `FormData` or device-specific properties like
     * `PasswordForm::skip_zero_click` that prevents a credential to be used for
     * Credential Management requests on this device.
     * </pre>
     *
     * <code>optional bytes opaque_metadata = 1;</code>
     * @return Whether the opaqueMetadata field is set.
     */
    boolean hasOpaqueMetadata();
    /**
     * <pre>
     * Metadata that is opaque to the provider. The provider does not read,
     * modify or interpret it, only Chrome does. This data will for example
     * contain `FormData` or device-specific properties like
     * `PasswordForm::skip_zero_click` that prevents a credential to be used for
     * Credential Management requests on this device.
     * </pre>
     *
     * <code>optional bytes opaque_metadata = 1;</code>
     * @return The opaqueMetadata.
     */
    com.google.protobuf.ByteString getOpaqueMetadata();

    /**
     * <pre>
     * Email address of the last sync account this password was associated with.
     * This field is maintained by Chrome as well as by the provider.
     * This field is present only if the password is NOT currently associated
     * with a syncing account AND it was associated with one in the past.
     * E.g. test&#64;gmail.com (lowercase and canonicalized).
     * </pre>
     *
     * <code>optional string previously_associated_sync_account_email = 2;</code>
     * @return Whether the previouslyAssociatedSyncAccountEmail field is set.
     */
    boolean hasPreviouslyAssociatedSyncAccountEmail();
    /**
     * <pre>
     * Email address of the last sync account this password was associated with.
     * This field is maintained by Chrome as well as by the provider.
     * This field is present only if the password is NOT currently associated
     * with a syncing account AND it was associated with one in the past.
     * E.g. test&#64;gmail.com (lowercase and canonicalized).
     * </pre>
     *
     * <code>optional string previously_associated_sync_account_email = 2;</code>
     * @return The previouslyAssociatedSyncAccountEmail.
     */
    java.lang.String getPreviouslyAssociatedSyncAccountEmail();
    /**
     * <pre>
     * Email address of the last sync account this password was associated with.
     * This field is maintained by Chrome as well as by the provider.
     * This field is present only if the password is NOT currently associated
     * with a syncing account AND it was associated with one in the past.
     * E.g. test&#64;gmail.com (lowercase and canonicalized).
     * </pre>
     *
     * <code>optional string previously_associated_sync_account_email = 2;</code>
     * @return The bytes for previouslyAssociatedSyncAccountEmail.
     */
    com.google.protobuf.ByteString
        getPreviouslyAssociatedSyncAccountEmailBytes();
  }
  /**
   * <pre>
   * Local data that is related to the `password_specifics_data`. Although it is
   * stored close to the `password_specifics_data`, it always stays local to the
   * device the password is stored on and is never synced.
   * </pre>
   *
   * Protobuf type {@code sync_pb.PasswordWithLocalData.LocalData}
   */
  public  static final class LocalData extends
      com.google.protobuf.GeneratedMessageLite<
          LocalData, LocalData.Builder> implements
      // @@protoc_insertion_point(message_implements:sync_pb.PasswordWithLocalData.LocalData)
      LocalDataOrBuilder {
    private LocalData() {
      opaqueMetadata_ = com.google.protobuf.ByteString.EMPTY;
      previouslyAssociatedSyncAccountEmail_ = "";
    }
    private int bitField0_;
    public static final int OPAQUE_METADATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString opaqueMetadata_;
    /**
     * <pre>
     * Metadata that is opaque to the provider. The provider does not read,
     * modify or interpret it, only Chrome does. This data will for example
     * contain `FormData` or device-specific properties like
     * `PasswordForm::skip_zero_click` that prevents a credential to be used for
     * Credential Management requests on this device.
     * </pre>
     *
     * <code>optional bytes opaque_metadata = 1;</code>
     * @return Whether the opaqueMetadata field is set.
     */
    @java.lang.Override
    public boolean hasOpaqueMetadata() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Metadata that is opaque to the provider. The provider does not read,
     * modify or interpret it, only Chrome does. This data will for example
     * contain `FormData` or device-specific properties like
     * `PasswordForm::skip_zero_click` that prevents a credential to be used for
     * Credential Management requests on this device.
     * </pre>
     *
     * <code>optional bytes opaque_metadata = 1;</code>
     * @return The opaqueMetadata.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getOpaqueMetadata() {
      return opaqueMetadata_;
    }
    /**
     * <pre>
     * Metadata that is opaque to the provider. The provider does not read,
     * modify or interpret it, only Chrome does. This data will for example
     * contain `FormData` or device-specific properties like
     * `PasswordForm::skip_zero_click` that prevents a credential to be used for
     * Credential Management requests on this device.
     * </pre>
     *
     * <code>optional bytes opaque_metadata = 1;</code>
     * @param value The opaqueMetadata to set.
     */
    private void setOpaqueMetadata(com.google.protobuf.ByteString value) {
      value.getClass();
  bitField0_ |= 0x00000001;
      opaqueMetadata_ = value;
    }
    /**
     * <pre>
     * Metadata that is opaque to the provider. The provider does not read,
     * modify or interpret it, only Chrome does. This data will for example
     * contain `FormData` or device-specific properties like
     * `PasswordForm::skip_zero_click` that prevents a credential to be used for
     * Credential Management requests on this device.
     * </pre>
     *
     * <code>optional bytes opaque_metadata = 1;</code>
     */
    private void clearOpaqueMetadata() {
      bitField0_ = (bitField0_ & ~0x00000001);
      opaqueMetadata_ = getDefaultInstance().getOpaqueMetadata();
    }

    public static final int PREVIOUSLY_ASSOCIATED_SYNC_ACCOUNT_EMAIL_FIELD_NUMBER = 2;
    private java.lang.String previouslyAssociatedSyncAccountEmail_;
    /**
     * <pre>
     * Email address of the last sync account this password was associated with.
     * This field is maintained by Chrome as well as by the provider.
     * This field is present only if the password is NOT currently associated
     * with a syncing account AND it was associated with one in the past.
     * E.g. test&#64;gmail.com (lowercase and canonicalized).
     * </pre>
     *
     * <code>optional string previously_associated_sync_account_email = 2;</code>
     * @return Whether the previouslyAssociatedSyncAccountEmail field is set.
     */
    @java.lang.Override
    public boolean hasPreviouslyAssociatedSyncAccountEmail() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Email address of the last sync account this password was associated with.
     * This field is maintained by Chrome as well as by the provider.
     * This field is present only if the password is NOT currently associated
     * with a syncing account AND it was associated with one in the past.
     * E.g. test&#64;gmail.com (lowercase and canonicalized).
     * </pre>
     *
     * <code>optional string previously_associated_sync_account_email = 2;</code>
     * @return The previouslyAssociatedSyncAccountEmail.
     */
    @java.lang.Override
    public java.lang.String getPreviouslyAssociatedSyncAccountEmail() {
      return previouslyAssociatedSyncAccountEmail_;
    }
    /**
     * <pre>
     * Email address of the last sync account this password was associated with.
     * This field is maintained by Chrome as well as by the provider.
     * This field is present only if the password is NOT currently associated
     * with a syncing account AND it was associated with one in the past.
     * E.g. test&#64;gmail.com (lowercase and canonicalized).
     * </pre>
     *
     * <code>optional string previously_associated_sync_account_email = 2;</code>
     * @return The bytes for previouslyAssociatedSyncAccountEmail.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPreviouslyAssociatedSyncAccountEmailBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(previouslyAssociatedSyncAccountEmail_);
    }
    /**
     * <pre>
     * Email address of the last sync account this password was associated with.
     * This field is maintained by Chrome as well as by the provider.
     * This field is present only if the password is NOT currently associated
     * with a syncing account AND it was associated with one in the past.
     * E.g. test&#64;gmail.com (lowercase and canonicalized).
     * </pre>
     *
     * <code>optional string previously_associated_sync_account_email = 2;</code>
     * @param value The previouslyAssociatedSyncAccountEmail to set.
     */
    private void setPreviouslyAssociatedSyncAccountEmail(
        java.lang.String value) {
      value.getClass();
  bitField0_ |= 0x00000002;
      previouslyAssociatedSyncAccountEmail_ = value;
    }
    /**
     * <pre>
     * Email address of the last sync account this password was associated with.
     * This field is maintained by Chrome as well as by the provider.
     * This field is present only if the password is NOT currently associated
     * with a syncing account AND it was associated with one in the past.
     * E.g. test&#64;gmail.com (lowercase and canonicalized).
     * </pre>
     *
     * <code>optional string previously_associated_sync_account_email = 2;</code>
     */
    private void clearPreviouslyAssociatedSyncAccountEmail() {
      bitField0_ = (bitField0_ & ~0x00000002);
      previouslyAssociatedSyncAccountEmail_ = getDefaultInstance().getPreviouslyAssociatedSyncAccountEmail();
    }
    /**
     * <pre>
     * Email address of the last sync account this password was associated with.
     * This field is maintained by Chrome as well as by the provider.
     * This field is present only if the password is NOT currently associated
     * with a syncing account AND it was associated with one in the past.
     * E.g. test&#64;gmail.com (lowercase and canonicalized).
     * </pre>
     *
     * <code>optional string previously_associated_sync_account_email = 2;</code>
     * @param value The bytes for previouslyAssociatedSyncAccountEmail to set.
     */
    private void setPreviouslyAssociatedSyncAccountEmailBytes(
        com.google.protobuf.ByteString value) {
      previouslyAssociatedSyncAccountEmail_ = value.toStringUtf8();
      bitField0_ |= 0x00000002;
    }

    public static org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Local data that is related to the `password_specifics_data`. Although it is
     * stored close to the `password_specifics_data`, it always stays local to the
     * device the password is stored on and is never synced.
     * </pre>
     *
     * Protobuf type {@code sync_pb.PasswordWithLocalData.LocalData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData, Builder> implements
        // @@protoc_insertion_point(builder_implements:sync_pb.PasswordWithLocalData.LocalData)
        org.chromium.components.sync.protocol.PasswordWithLocalData.LocalDataOrBuilder {
      // Construct using org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Metadata that is opaque to the provider. The provider does not read,
       * modify or interpret it, only Chrome does. This data will for example
       * contain `FormData` or device-specific properties like
       * `PasswordForm::skip_zero_click` that prevents a credential to be used for
       * Credential Management requests on this device.
       * </pre>
       *
       * <code>optional bytes opaque_metadata = 1;</code>
       * @return Whether the opaqueMetadata field is set.
       */
      @java.lang.Override
      public boolean hasOpaqueMetadata() {
        return instance.hasOpaqueMetadata();
      }
      /**
       * <pre>
       * Metadata that is opaque to the provider. The provider does not read,
       * modify or interpret it, only Chrome does. This data will for example
       * contain `FormData` or device-specific properties like
       * `PasswordForm::skip_zero_click` that prevents a credential to be used for
       * Credential Management requests on this device.
       * </pre>
       *
       * <code>optional bytes opaque_metadata = 1;</code>
       * @return The opaqueMetadata.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getOpaqueMetadata() {
        return instance.getOpaqueMetadata();
      }
      /**
       * <pre>
       * Metadata that is opaque to the provider. The provider does not read,
       * modify or interpret it, only Chrome does. This data will for example
       * contain `FormData` or device-specific properties like
       * `PasswordForm::skip_zero_click` that prevents a credential to be used for
       * Credential Management requests on this device.
       * </pre>
       *
       * <code>optional bytes opaque_metadata = 1;</code>
       * @param value The opaqueMetadata to set.
       * @return This builder for chaining.
       */
      public Builder setOpaqueMetadata(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setOpaqueMetadata(value);
        return this;
      }
      /**
       * <pre>
       * Metadata that is opaque to the provider. The provider does not read,
       * modify or interpret it, only Chrome does. This data will for example
       * contain `FormData` or device-specific properties like
       * `PasswordForm::skip_zero_click` that prevents a credential to be used for
       * Credential Management requests on this device.
       * </pre>
       *
       * <code>optional bytes opaque_metadata = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOpaqueMetadata() {
        copyOnWrite();
        instance.clearOpaqueMetadata();
        return this;
      }

      /**
       * <pre>
       * Email address of the last sync account this password was associated with.
       * This field is maintained by Chrome as well as by the provider.
       * This field is present only if the password is NOT currently associated
       * with a syncing account AND it was associated with one in the past.
       * E.g. test&#64;gmail.com (lowercase and canonicalized).
       * </pre>
       *
       * <code>optional string previously_associated_sync_account_email = 2;</code>
       * @return Whether the previouslyAssociatedSyncAccountEmail field is set.
       */
      @java.lang.Override
      public boolean hasPreviouslyAssociatedSyncAccountEmail() {
        return instance.hasPreviouslyAssociatedSyncAccountEmail();
      }
      /**
       * <pre>
       * Email address of the last sync account this password was associated with.
       * This field is maintained by Chrome as well as by the provider.
       * This field is present only if the password is NOT currently associated
       * with a syncing account AND it was associated with one in the past.
       * E.g. test&#64;gmail.com (lowercase and canonicalized).
       * </pre>
       *
       * <code>optional string previously_associated_sync_account_email = 2;</code>
       * @return The previouslyAssociatedSyncAccountEmail.
       */
      @java.lang.Override
      public java.lang.String getPreviouslyAssociatedSyncAccountEmail() {
        return instance.getPreviouslyAssociatedSyncAccountEmail();
      }
      /**
       * <pre>
       * Email address of the last sync account this password was associated with.
       * This field is maintained by Chrome as well as by the provider.
       * This field is present only if the password is NOT currently associated
       * with a syncing account AND it was associated with one in the past.
       * E.g. test&#64;gmail.com (lowercase and canonicalized).
       * </pre>
       *
       * <code>optional string previously_associated_sync_account_email = 2;</code>
       * @return The bytes for previouslyAssociatedSyncAccountEmail.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getPreviouslyAssociatedSyncAccountEmailBytes() {
        return instance.getPreviouslyAssociatedSyncAccountEmailBytes();
      }
      /**
       * <pre>
       * Email address of the last sync account this password was associated with.
       * This field is maintained by Chrome as well as by the provider.
       * This field is present only if the password is NOT currently associated
       * with a syncing account AND it was associated with one in the past.
       * E.g. test&#64;gmail.com (lowercase and canonicalized).
       * </pre>
       *
       * <code>optional string previously_associated_sync_account_email = 2;</code>
       * @param value The previouslyAssociatedSyncAccountEmail to set.
       * @return This builder for chaining.
       */
      public Builder setPreviouslyAssociatedSyncAccountEmail(
          java.lang.String value) {
        copyOnWrite();
        instance.setPreviouslyAssociatedSyncAccountEmail(value);
        return this;
      }
      /**
       * <pre>
       * Email address of the last sync account this password was associated with.
       * This field is maintained by Chrome as well as by the provider.
       * This field is present only if the password is NOT currently associated
       * with a syncing account AND it was associated with one in the past.
       * E.g. test&#64;gmail.com (lowercase and canonicalized).
       * </pre>
       *
       * <code>optional string previously_associated_sync_account_email = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPreviouslyAssociatedSyncAccountEmail() {
        copyOnWrite();
        instance.clearPreviouslyAssociatedSyncAccountEmail();
        return this;
      }
      /**
       * <pre>
       * Email address of the last sync account this password was associated with.
       * This field is maintained by Chrome as well as by the provider.
       * This field is present only if the password is NOT currently associated
       * with a syncing account AND it was associated with one in the past.
       * E.g. test&#64;gmail.com (lowercase and canonicalized).
       * </pre>
       *
       * <code>optional string previously_associated_sync_account_email = 2;</code>
       * @param value The bytes for previouslyAssociatedSyncAccountEmail to set.
       * @return This builder for chaining.
       */
      public Builder setPreviouslyAssociatedSyncAccountEmailBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPreviouslyAssociatedSyncAccountEmailBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:sync_pb.PasswordWithLocalData.LocalData)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "opaqueMetadata_",
              "previouslyAssociatedSyncAccountEmail_",
            };
            java.lang.String info =
                "\u0001\u0002\u0000\u0001\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u100a\u0000\u0002" +
                "\u1008\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData> parser = PARSER;
          if (parser == null) {
            synchronized (org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:sync_pb.PasswordWithLocalData.LocalData)
    private static final org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData DEFAULT_INSTANCE;
    static {
      LocalData defaultInstance = new LocalData();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        LocalData.class, defaultInstance);
    }

    public static org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LocalData> PARSER;

    public static com.google.protobuf.Parser<LocalData> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int bitField0_;
  public static final int PASSWORD_SPECIFICS_DATA_FIELD_NUMBER = 1;
  private org.chromium.components.sync.protocol.PasswordSpecificsData passwordSpecificsData_;
  /**
   * <pre>
   * A potentially synced set of credentials.
   * </pre>
   *
   * <code>optional .sync_pb.PasswordSpecificsData password_specifics_data = 1;</code>
   */
  @java.lang.Override
  public boolean hasPasswordSpecificsData() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * A potentially synced set of credentials.
   * </pre>
   *
   * <code>optional .sync_pb.PasswordSpecificsData password_specifics_data = 1;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.PasswordSpecificsData getPasswordSpecificsData() {
    return passwordSpecificsData_ == null ? org.chromium.components.sync.protocol.PasswordSpecificsData.getDefaultInstance() : passwordSpecificsData_;
  }
  /**
   * <pre>
   * A potentially synced set of credentials.
   * </pre>
   *
   * <code>optional .sync_pb.PasswordSpecificsData password_specifics_data = 1;</code>
   */
  private void setPasswordSpecificsData(org.chromium.components.sync.protocol.PasswordSpecificsData value) {
    value.getClass();
  passwordSpecificsData_ = value;
    bitField0_ |= 0x00000001;
    }
  /**
   * <pre>
   * A potentially synced set of credentials.
   * </pre>
   *
   * <code>optional .sync_pb.PasswordSpecificsData password_specifics_data = 1;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergePasswordSpecificsData(org.chromium.components.sync.protocol.PasswordSpecificsData value) {
    value.getClass();
  if (passwordSpecificsData_ != null &&
        passwordSpecificsData_ != org.chromium.components.sync.protocol.PasswordSpecificsData.getDefaultInstance()) {
      passwordSpecificsData_ =
        org.chromium.components.sync.protocol.PasswordSpecificsData.newBuilder(passwordSpecificsData_).mergeFrom(value).buildPartial();
    } else {
      passwordSpecificsData_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   * <pre>
   * A potentially synced set of credentials.
   * </pre>
   *
   * <code>optional .sync_pb.PasswordSpecificsData password_specifics_data = 1;</code>
   */
  private void clearPasswordSpecificsData() {  passwordSpecificsData_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int LOCAL_DATA_FIELD_NUMBER = 3;
  private org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData localData_;
  /**
   * <code>optional .sync_pb.PasswordWithLocalData.LocalData local_data = 3;</code>
   */
  @java.lang.Override
  public boolean hasLocalData() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional .sync_pb.PasswordWithLocalData.LocalData local_data = 3;</code>
   */
  @java.lang.Override
  public org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData getLocalData() {
    return localData_ == null ? org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData.getDefaultInstance() : localData_;
  }
  /**
   * <code>optional .sync_pb.PasswordWithLocalData.LocalData local_data = 3;</code>
   */
  private void setLocalData(org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData value) {
    value.getClass();
  localData_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <code>optional .sync_pb.PasswordWithLocalData.LocalData local_data = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeLocalData(org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData value) {
    value.getClass();
  if (localData_ != null &&
        localData_ != org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData.getDefaultInstance()) {
      localData_ =
        org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData.newBuilder(localData_).mergeFrom(value).buildPartial();
    } else {
      localData_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <code>optional .sync_pb.PasswordWithLocalData.LocalData local_data = 3;</code>
   */
  private void clearLocalData() {  localData_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static org.chromium.components.sync.protocol.PasswordWithLocalData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.PasswordWithLocalData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.PasswordWithLocalData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.PasswordWithLocalData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.PasswordWithLocalData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.PasswordWithLocalData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.PasswordWithLocalData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.PasswordWithLocalData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.PasswordWithLocalData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.PasswordWithLocalData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.PasswordWithLocalData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.PasswordWithLocalData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.PasswordWithLocalData prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Wrapper for a set of credentials that consists of (possibly) synced password
   * data and local data that is exclusively read and modified by Chrome.
   * ATTENTION(crbug.com/1330911): This proto is being moved to
   * components/password_manager/core/browser/protocol folder. Two files exist
   * while the migration is in process, this file will be deleted when the
   * migration is over. IF YOU MODIFY THIS FILE, PLEASE ALSO MODIFY THE COPY IN
   * components/password_manager.
   * </pre>
   *
   * Protobuf type {@code sync_pb.PasswordWithLocalData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.PasswordWithLocalData, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.PasswordWithLocalData)
      org.chromium.components.sync.protocol.PasswordWithLocalDataOrBuilder {
    // Construct using org.chromium.components.sync.protocol.PasswordWithLocalData.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * A potentially synced set of credentials.
     * </pre>
     *
     * <code>optional .sync_pb.PasswordSpecificsData password_specifics_data = 1;</code>
     */
    @java.lang.Override
    public boolean hasPasswordSpecificsData() {
      return instance.hasPasswordSpecificsData();
    }
    /**
     * <pre>
     * A potentially synced set of credentials.
     * </pre>
     *
     * <code>optional .sync_pb.PasswordSpecificsData password_specifics_data = 1;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.PasswordSpecificsData getPasswordSpecificsData() {
      return instance.getPasswordSpecificsData();
    }
    /**
     * <pre>
     * A potentially synced set of credentials.
     * </pre>
     *
     * <code>optional .sync_pb.PasswordSpecificsData password_specifics_data = 1;</code>
     */
    public Builder setPasswordSpecificsData(org.chromium.components.sync.protocol.PasswordSpecificsData value) {
      copyOnWrite();
      instance.setPasswordSpecificsData(value);
      return this;
      }
    /**
     * <pre>
     * A potentially synced set of credentials.
     * </pre>
     *
     * <code>optional .sync_pb.PasswordSpecificsData password_specifics_data = 1;</code>
     */
    public Builder setPasswordSpecificsData(
        org.chromium.components.sync.protocol.PasswordSpecificsData.Builder builderForValue) {
      copyOnWrite();
      instance.setPasswordSpecificsData(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A potentially synced set of credentials.
     * </pre>
     *
     * <code>optional .sync_pb.PasswordSpecificsData password_specifics_data = 1;</code>
     */
    public Builder mergePasswordSpecificsData(org.chromium.components.sync.protocol.PasswordSpecificsData value) {
      copyOnWrite();
      instance.mergePasswordSpecificsData(value);
      return this;
    }
    /**
     * <pre>
     * A potentially synced set of credentials.
     * </pre>
     *
     * <code>optional .sync_pb.PasswordSpecificsData password_specifics_data = 1;</code>
     */
    public Builder clearPasswordSpecificsData() {  copyOnWrite();
      instance.clearPasswordSpecificsData();
      return this;
    }

    /**
     * <code>optional .sync_pb.PasswordWithLocalData.LocalData local_data = 3;</code>
     */
    @java.lang.Override
    public boolean hasLocalData() {
      return instance.hasLocalData();
    }
    /**
     * <code>optional .sync_pb.PasswordWithLocalData.LocalData local_data = 3;</code>
     */
    @java.lang.Override
    public org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData getLocalData() {
      return instance.getLocalData();
    }
    /**
     * <code>optional .sync_pb.PasswordWithLocalData.LocalData local_data = 3;</code>
     */
    public Builder setLocalData(org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData value) {
      copyOnWrite();
      instance.setLocalData(value);
      return this;
      }
    /**
     * <code>optional .sync_pb.PasswordWithLocalData.LocalData local_data = 3;</code>
     */
    public Builder setLocalData(
        org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData.Builder builderForValue) {
      copyOnWrite();
      instance.setLocalData(builderForValue.build());
      return this;
    }
    /**
     * <code>optional .sync_pb.PasswordWithLocalData.LocalData local_data = 3;</code>
     */
    public Builder mergeLocalData(org.chromium.components.sync.protocol.PasswordWithLocalData.LocalData value) {
      copyOnWrite();
      instance.mergeLocalData(value);
      return this;
    }
    /**
     * <code>optional .sync_pb.PasswordWithLocalData.LocalData local_data = 3;</code>
     */
    public Builder clearLocalData() {  copyOnWrite();
      instance.clearLocalData();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.PasswordWithLocalData)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.PasswordWithLocalData();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "passwordSpecificsData_",
            "localData_",
          };
          java.lang.String info =
              "\u0001\u0002\u0000\u0001\u0001\u0003\u0002\u0000\u0000\u0000\u0001\u1009\u0000\u0003" +
              "\u1009\u0001";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<org.chromium.components.sync.protocol.PasswordWithLocalData> parser = PARSER;
        if (parser == null) {
          synchronized (org.chromium.components.sync.protocol.PasswordWithLocalData.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<org.chromium.components.sync.protocol.PasswordWithLocalData>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.PasswordWithLocalData)
  private static final org.chromium.components.sync.protocol.PasswordWithLocalData DEFAULT_INSTANCE;
  static {
    PasswordWithLocalData defaultInstance = new PasswordWithLocalData();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      PasswordWithLocalData.class, defaultInstance);
  }

  public static org.chromium.components.sync.protocol.PasswordWithLocalData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<PasswordWithLocalData> PARSER;

  public static com.google.protobuf.Parser<PasswordWithLocalData> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

